# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Armor {
  createdAt: DateTime!
  defense: Int!
  id: String!
  name: String!
  rarity: ArmorRarity!
  slot: ArmorSlot!
  type: ArmorType!
  updatedAt: DateTime!
  value: Int!
  weight: Float
}

"""Raridade da armadura"""
enum ArmorRarity {
  Common
  Epic
  Legendary
  Rare
  Uncommon
}

"""Slot da armadura"""
enum ArmorSlot {
  Arms
  Chest
  Feet
  Head
  Legs
}

"""Tipo da armadura"""
enum ArmorType {
  Heavy
  Light
  Medium
  PowerArmor
}

type Character {
  agility: Int!
  armors: [CharacterArmor!]
  charisma: Int!
  createdAt: DateTime!
  endurance: Int!
  hitPoints: Int!
  id: String!
  intelligence: Int!
  inventory: [InventoryItem!]
  level: Int!
  luck: Int!
  name: String!
  perception: Int!
  perks: [Perk!]
  strength: Int!
  updatedAt: DateTime!
  userId: String
  weapons: [CharacterWeapon!]!
}

type CharacterArmor {
  armor: Armor!
  armorId: String!
  characterId: String!
  equipped: Boolean!
  id: String!
  slot: ArmorSlot!
}

type CharacterQuest {
  acceptedAt: DateTime!
  character: Character!
  completedAt: DateTime
  id: ID!
  quest: Quest!
  status: QuestStatus!
}

type CharacterWeapon {
  equipped: Boolean!
  id: String!
  weapon: Weapon!
}

input CreateArmorInput {
  defense: Int!
  name: String!
  rarity: ArmorRarity
  slot: ArmorSlot!
  type: ArmorType!
  value: Int!
  weight: Float
}

input CreateCharacterInput {
  agility: Int!
  charisma: Int!
  endurance: Int!
  hitPoints: Float!
  intelligence: Int!
  level: Float!
  luck: Int!
  name: String!
  perception: Int!
  strength: Int!
  userId: String
}

input CreateInventoryItemInput {
  characterId: String!
  itemId: String!
  quantity: Int!
}

input CreateItemInput {
  description: String
  effects: String
  name: String!
  type: ItemType!
  value: Float
  weight: Float
}

input CreatePerkInput {
  description: String!
  effects: JSON
  name: String!
  requiredLevel: Int
}

input CreateUserInput {
  name: String!
}

input CreateWeaponInput {
  ammoType: String
  damage: Int!
  name: String!
  range: Int
  rarity: String
  type: String!
  value: Int!
  weight: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EquipArmorInput {
  armorId: String!
  characterId: String!
  slot: ArmorSlot!
}

type InventoryItem {
  characterId: String!
  id: String!
  item: Item
  itemId: String!
  quantity: Int!
}

type Item {
  createdAt: DateTime!
  description: String
  effects: String
  id: String!
  name: String!
  type: String
  updatedAt: DateTime!
}

enum ItemType {
  Aid
  Ammo
  Consumable
  Material
  Quest
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  acceptQuest(characterId: String!, questId: String!): CharacterQuest!
  completeQuest(characterId: String!, questId: String!): CharacterQuest!
  createArmor(data: CreateArmorInput!): Armor!
  createCharacter(data: CreateCharacterInput!): Character!
  createInventoryItem(data: CreateInventoryItemInput!): InventoryItem!
  createItem(data: CreateItemInput!): Item!
  createPerk(data: CreatePerkInput!): Perk!
  createQuest(data: QuestCreateInput!): Quest!
  createUser(data: CreateUserInput!): User!
  createWeapon(data: CreateWeaponInput!): Weapon!
  equipArmor(data: EquipArmorInput!): Character!
  equipWeapon(characterId: String!, weaponId: String!): Character!
  failQuest(characterId: String!, questId: String!): CharacterQuest!
  removeArmor(id: String!): Armor!
  removeCharacter(id: String!): Character!
  removeInventoryItem(id: String!): InventoryItem!
  removeItem(id: String!): Item!
  removePerk(id: String!): Perk!
  removeUser(id: String!): User!
  removeWeapon(id: String!): Weapon!
  unequipAllArmor(characterId: String!): Character!
  unequipArmorSlot(characterId: String!, unequipArmorSlot: ArmorSlot!): Character!
  unequipWeapon(characterId: String!, weaponId: String!): Character!
  updateArmor(data: UpdateArmorInput!): Armor!
  updateCharacter(data: UpdateCharacterInput!, id: String!): Character!
  updateInventoryItem(data: UpdateInventoryItemInput!, id: String!): InventoryItem!
  updateItem(data: UpdateItemInput!, id: String!): Item!
  updatePerk(data: UpdatePerkInput!, id: String!): Perk!
  updateUser(data: UpdateUserInput!, id: String!): User!
  updateWeapon(data: UpdateWeaponInput!, id: String!): Weapon!
}

type Perk {
  createdAt: DateTime!
  description: String!
  effects: JSON
  id: String!
  name: String!
  requiredLevel: Int
  updatedAt: DateTime!
}

type Query {
  armor(id: String!): Armor!
  armors: [Armor!]!
  character(id: String!): Character!
  characters: [Character!]!
  inventoryItem(id: String!): InventoryItem!
  inventoryItems: [InventoryItem!]!
  item(id: String!): Item!
  items: [Item!]!
  perk(id: String!): Perk!
  perks: [Perk!]!
  quest(id: String!): Quest!
  quests: [Quest!]!
  questsByCharacter(characterId: String!): [CharacterQuest!]!
  questsByStatus(status: QuestStatus!): [CharacterQuest!]!
  user(id: String!): User!
  users: [User!]!
  weapon(id: String!): Weapon!
  weapons: [Weapon!]!
}

type Quest {
  characters: [CharacterQuest]!
  createdAt: DateTime!
  description: String!
  experience: Float!
  id: ID!
  locationId: String
  npcId: String
  rewardCaps: Float!
  status: QuestStatus!
  title: String!
  updatedAt: DateTime!
}

input QuestCreateInput {
  description: String!
  experience: Int!
  locationId: String
  npcId: String
  rewardCaps: Int!
  title: String!
}

enum QuestStatus {
  Completed
  Failed
  InProgress
  Pending
}

input UpdateArmorInput {
  defense: Int
  id: String!
  name: String
  rarity: ArmorRarity
  slot: ArmorSlot
  type: ArmorType
  value: Int
  weight: Float
}

input UpdateCharacterInput {
  agility: Int
  charisma: Int
  endurance: Int
  hitPoints: Float
  id: String!
  intelligence: Int
  level: Float
  luck: Int
  name: String
  perception: Int
  strength: Int
  userId: String
}

input UpdateInventoryItemInput {
  characterId: String
  id: String
  itemId: String
  quantity: Int
}

input UpdateItemInput {
  description: String
  effects: String
  id: String!
  name: String
  type: ItemType
  value: Float
  weight: Float
}

input UpdatePerkInput {
  description: String
  effects: JSON
  id: String!
  name: String
  requiredLevel: Int
}

input UpdateUserInput {
  id: String!
  name: String
}

input UpdateWeaponInput {
  ammoType: String
  damage: Int
  id: String!
  name: String
  range: Int
  rarity: String
  type: String
  value: Int
  weight: Float
}

type User {
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
}

type Weapon {
  ammoType: String
  createdAt: DateTime!
  damage: Int!
  id: String!
  name: String!
  range: Int
  rarity: String
  type: String!
  updatedAt: DateTime!
  value: Int!
  weight: Float
}